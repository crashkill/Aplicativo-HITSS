#!/bin/bash

# ===========================================
# Script para Push Dual Repository
# ===========================================

set -e

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

title() {
    echo -e "${BLUE}=== $1 ===${NC}"
}

# Verificar se h√° mudan√ßas pendentes
if ! git diff-index --quiet HEAD --; then
    warn "H√° mudan√ßas n√£o commitadas. Voc√™ quer continuar? (y/n)"
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Pegar branch atual
CURRENT_BRANCH=$(git symbolic-ref --short HEAD)

title "Push para GitHub + GitLab - Branch: $CURRENT_BRANCH"

# Verificar se os remotes existem
if ! git remote | grep -q "origin"; then
    error "Remote 'origin' (GitHub) n√£o encontrado"
    exit 1
fi

if ! git remote | grep -q "gitlab"; then
    error "Remote 'gitlab' n√£o encontrado. Execute scripts/dual-repo-setup.sh primeiro"
    exit 1
fi

# Push para GitHub
log "üì§ Fazendo push para GitHub..."
if git push origin "$CURRENT_BRANCH"; then
    log "‚úÖ Push para GitHub conclu√≠do"
else
    error "‚ùå Falha no push para GitHub"
    exit 1
fi

# Push para GitLab
log "üì§ Fazendo push para GitLab..."
if git push gitlab "$CURRENT_BRANCH"; then
    log "‚úÖ Push para GitLab conclu√≠do"
else
    error "‚ùå Falha no push para GitLab"
    warn "Continuando... GitHub j√° foi atualizado"
fi

echo ""
title "üéâ Push Dual Repository Conclu√≠do!"

log "Branch '$CURRENT_BRANCH' sincronizada em:"
echo "  ‚Ä¢ GitHub: https://github.com/crashkill/Aplicativo-HITSS"
echo "  ‚Ä¢ GitLab: [URL da sua empresa]"

echo ""
log "üí° Dica: Use 'git push both $CURRENT_BRANCH' para push simult√¢neo" 